<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="STEP" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">// Gravity bois
if gravitytype
{
    point = instance_nearest(x, y,GravityBoi);
    gravity_direction = point_direction(x, y, point.pointx, point.pointy);
    if speed &gt; 10
        speed = 10;
}
// Bullet hell bois
else
{
    // Appearance effect
    if !visible
    {
        dis = point_distance(x, y, spawnerx, spawnery);
        if dis &gt; appeardistance or abs(y-spawnery) &gt; appeardistancey
        {
            visible = true;
            dir = point_direction(x, y, spawnerx, spawnery)
            
            if showparticles
            {
                for(i = 0; i &lt;= dis/8; i += 1)
                {
                    effect_create_below(ef_star, x+lengthdir_x(i/(dis/8)*dis, dir), y+lengthdir_y(i/(dis/8)*dis, dir), 0, merge_color(c_white,merge_color(orbcolor1, orbcolor2, random(0.5)), 0.5));
                }
                effect_create_above(ef_smoke, x, y, 0, spawncolor);

            }
        }
    }
    
    // Rotate    
    direction += rotate;
    
    // Friction
    if xfriction != 0 {
        if abs(hspeed) &lt; xfriction {
            hspeed = 0
        }
        else if hspeed &gt; 0 {
            hspeed -= xfriction
        }
        else {
            hspeed += xfriction
        }
    }
    if yfriction != 0 {
        if abs(vspeed) &lt; yfriction {
            vspeed = 0
        }
        else if vspeed &gt; 0 {
            vspeed -= yfriction
        }
        else {
            vspeed += yfriction
        }
    }
    
    // Maintain speed
    if maintainspeed {
        speed = originalspeed;
    }
    
    // Keep spawner active
    if keepactivefor mod 30 = 0 and instance_number(MainApple) &gt; 0 {
        if point_distance(x,y,MainApple.x,MainApple.y) &lt;= 480 {
            keepactivefor = 60
        }
    }
    if keepactivefor &gt; 0 {
        instance_activate_object(spawner)
        keepactivefor -= 1
    }
}
// Trails
if visible and showparticles and global.timer mod 4 = 0
{
    part_particles_create_color(ParticleBitch.bullethelltrailparticlesystem,x,y,ParticleBitch.bullethelltrailparticletype,trailcolor, 1);
}
</argument>
      </arguments>
    </action>
  </actions>
</event>
