<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="MOUSE" id="4">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">with(obj_Cheats_Picker)
{
    if y!=other.y break;
    cycle-=other.image_xscale;
    if cycle&lt;0 cycle=sprite_get_number(spr_CustomCategories)-1;
    if cycle&gt;sprite_get_number(spr_CustomCategories)-1 cycle=0;
};
with(obj_Cheats_PickerBottom)
{
    if y!=other.y break;
    cycle[obj_Cheats_Picker.cycle]-=other.image_xscale;
    execute_string("spr=spr_CustomCategories_"+string(obj_Cheats_Picker.cycle));
    if cycle[obj_Cheats_Picker.cycle]&lt;0 cycle[obj_Cheats_Picker.cycle]=sprite_get_number(spr)/6-1;
    if cycle[obj_Cheats_Picker.cycle]&gt;sprite_get_number(spr)/6-1 cycle[obj_Cheats_Picker.cycle]=0;
};
with(obj_Cheats_PickerBottom)
{
    editingcolor1=obj_Cheats_Picker.cycle;
    editingcolor2=cycle[obj_Cheats_Picker.cycle]*6;
    obj_Cheats_hs.px=color_get_hue(color[editingcolor1,editingcolor2]);
    obj_Cheats_hs.py=255-color_get_saturation(color[editingcolor1,editingcolor2]);
    obj_Cheats_v.pz=255-color_get_value(color[editingcolor1,editingcolor2]);
    
    var nn,nnn,o;
    nn=0;
    nnn=0;
    repeat(5)
    {
        if color[editingcolor1,editingcolor2+nn]!=-1 nnn+=1;
        nn+=1;
    };
    with(obj_CustomParts) instance_destroy();
    nn=0;
    repeat(nnn)
    {
        o=instance_create(x+32+52-(10*nnn)+(20*nn)+10,304-24+52+52+12,obj_CustomParts);
        o.image_index=nn;
        nn+=1;
    };
};
</argument>
      </arguments>
    </action>
  </actions>
</event>
