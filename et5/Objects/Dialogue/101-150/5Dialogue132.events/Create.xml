<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="CREATE" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">//Enclosing a part of a message in square brackets [] will cause the 
//enclosed string to be highlighted.

//Placing an asterisk * at the end of a message tells the code that
//the current message is the last message.

//Putting an exponent sign ^ at the end of a message followed by a number will cause the 
//next position to be at the number. If it is followed by a number, a comma, and then another number,
//then the code will open up a box for the player to choose which path to take.
//The first number is for the yes position, and the second is for the no position.

//If you surround a number by a less than sign &lt; and a greater then sign &gt;, the code will do a manual
//pause for the  specified number of steps.

//These are the actual messages.
str[0] = "DIE! DIE! DIE!"
str[1] = "Uh... hi?"
str[2] = "[APP!!!] YOU'RE HERE!!!"
str[3] = "[Soap! Angela!] And... some other apple. You're safe! [AND FRANK?!?!?!] Is that really you?!"
str[4] = "Yes, [App.] I never expected to see you in person again."
str[5] = "What is even going on here?"
str[6] = "Don't ask me."
str[7] = "[App.] Can you trust me?"
str[8] = "Not really."
str[9] = "Listen. I never intended for any of this to happen. You shouldn't be here. [Aneroid] betrayed me, and now he's trying to free [Zanifer.] If [Zanifer] escapes, it's all over for you apples."
str[10] = "[Aneroid] here has been trying to convince me that [Zanifer] is a good thing and that he'll save us from some [Arch Protector] guy."
str[11] = "[Arch Protector?] What are you talking about?"
str[12] = "No idea. So what's your say on why [Zanifer] is bad?"
str[13] = "[Zanifer] will destroy everything if he escapes. It doesn't help that he's invincible either."
str[14] = "If he escapes? From where?"
str[15] = "That metal box in front of you is where [Zanifer] is trapped. I named it [the Beast.] It's nearly indestructible to assure that [Zanifer] won't get out. But it can be unlocked on one condition..."
str[16] = "Oh?"
str[17] = "If there's enough [Sprite Energy] near [the Beast,] the locks will disengage and [Zanifer] will be freed. [Aneroid] purposefully made you travel to this area manually to work up your [Sprite Energy.]"
str[18] = "Wait, what?"
str[19] = "I don't have time to explain now. It's all too complicated, and it's better if you didn't know anyways."
str[20] = "I don't usually talk outside of messages, but since this is a big moment, I'll just say that I'll wait until you decide whether you want to be on [Zanifer's] side or not."
str[21] = "[Frank...] Why did you put the apples through so much trouble? And how did you survive being killed TWICE?"
str[22] = "The two [Franks] that got killed were just two clones that built the sentient [Evil Toaster] and [Evil Refrigerator] respectively. I'm the original [Frank.]"
str[23] = "The [Evil Toaster] and [Evil Refrigerator] were built to make you stronger as you fought them. However, I never predicted that they would build armies of kitchen appliances."
str[24] = "Make us stronger? Why?"
str[25] = "I wanted to prepare you. I realized you were unique lifeforms and you deserved to live, but the universe itself knows that none of you should exist. That's all I was told by my father."
str[26] = "You had a father?"
str[27] = "He's dead now, so it doesn't matter."
str[28] = "Oh... I'm sorry."
str[29] = "So, I will ask my question again. Can you trust me?"
str[30] = "Why are you any more trustable than [Aneroid?]"
str[31] = "Are you still doubting me? [Aneroid] is the one who created the ['Bots' Minions.'] He's been using many parts of my fleet as a factory for the [Bots' Minions.] Not to mention I'm completely at his mercy right now."
str[32] = "So... [App.] Choose."
str[33] = "You're the one who caused all of this, so I'm going to have to kill you, [Aneroid.]"
str[34] = "ATTA BOY! WE'LL HAVE A PERPETUAL SUMMER SLAM!"
str[35] = "Very well, [App.] Even if you somehow manage to defeat me, you will regret this."
str[36] = "I knew I could trust you, [App!] Even though [Aneroid] is a [Bot,] just focus on destroying him. He won't be able to repair himself because his [Power Box] is faulty. NOW CRUSH HIM!*"
//These are the headshots that correspond to each message.
img[0] = SoapFace
img[1] = AppFace
img[2] = SoapFace
img[3] = AppFace
img[4] = FrankHS
img[5] = AngelaFace
img[6] = AppFace
img[7] = FrankHS
img[8] = AppFace
img[9] = FrankHS
img[10] = AppFace
img[11] = FrankHS
img[12] = AppFace
img[13] = FrankHS
img[14] = AppFace
img[15] = FrankHS
img[16] = AppFace
img[17] = FrankHS
img[18] = AppFace
img[19] = FrankHS
img[20] = AneroidFace
img[21] = AngelaFace
img[22] = FrankHS
img[23] = FrankHS
img[24] = AppFace
img[25] = FrankHS
img[26] = AngelaFace
img[27] = FrankHS
img[28] = AngelaFace
img[29] = FrankHS
img[30] = AppFace
img[31] = FrankHS
img[32] = AneroidFace
img[33] = AppFace
img[34] = SoapFace
img[35] = AneroidFace
img[36] = FrankHS
//These are the names of the person talking in each message.
name[0] = "Soap"
name[1] = "App"
name[2] = "Soap"
name[3] = "App"
name[4] = "Frank"
name[5] = "Angela"
name[6] = "App"
name[7] = "Frank"
name[8] = "App"
name[9] = "Frank"
name[10] = "App"
name[11] = "Frank"
name[12] = "App"
name[13] = "Frank"
name[14] = "App"
name[15] = "Frank"
name[16] = "App"
name[17] = "Frank"
name[18] = "App"
name[19] = "Frank"
name[20] = "Aneroid"
name[21] = "Angela"
name[22] = "Frank"
name[23] = "Frank"
name[24] = "App"
name[25] = "Frank"
name[26] = "Angela"
name[27] = "Frank"
name[28] = "Angela"
name[29] = "Frank"
name[30] = "App"
name[31] = "Frank"
name[32] = "Aneroid"
name[33] = "App"
name[34] = "Soap"
name[35] = "Aneroid"
name[36] = "Frank"
//As you can see, it is quite easy to add extra details for
//each message simply by adding an extra array. 
//It's that simple!

//This determines the number of pixels each line can be.
line_length = 420
//This controls the speed of the the text.
text_speed = 1
//This is the  x position in which the string starts at.
string_x = 16
//This is the y position in which the string starts at.
string_y = 48
//This determines the vertical spacing between lines.
//When set to zero, the spacing will only be the string's height.
vertical_spacing = 0
//This is the x position of the question box.
question_box_x = 32
//This is the y position of the question box.
question_box_y = 128
//This is the x position of the text drawn in relevance to question_box_x.
question_x = 18
//This is the y position of the text drawn in relevance to question_box_y.
question_y = 7
//This is the x position of the names.
name_x = 50
//This is the y position of the names.
name_y = 22
//This is the x position of the headshot.
headshot_x = 12
//This is the y position of the headshot.
headshot_y = 12
//This is the vertical spacing in between "Yes" and "No".
question_vert_spacing = 2
//This is the x postion in relevance to question_box_x.
highlight_x = 2
//If this charcter is detected, initiate a highlight.
highlight_open_character = "["
//This character determines the end of a highlight. Anything enclosed
//will be highlighted.
highlight_close_character = "]"
//If this charcter is detected, end messages.
end_character = "*"
//If this charcter is detected, ask question or jump to next position.
jump_character = "^"
//If this character is detected, initiate a manual pause.
pause_open_character = "&lt;"
//This character determines the number. The enclosed number
//is the length of the manual pause.
pause_close_character = "&gt;"


//The following variables do not need to be changed and are only used
//by the code.



//This determins if the messages end.
message_end = 0
//This determines when the typing is finished.
type_end = 0
//This determines if the meesage is a question message.
message_question = 0
//This is the target position if yes is selected.
yes_position = 0
//This is the target position if no is selected.
no_position = 0
//This is the option selected by the user.
question_selection = 1
//This detemins if the message is a jump message.
message_jump = 0
//This is the position of the next message.
jump_position = 0
//This is the string that is going to be displayed. It contains the
//modified version of the actual string.
display_string = ""
//This states the current position we are at in str[x] for adding
//characters into display_string.
position = 0
//This states the current position we are in display_string. This is
//used to prevent line breaks in the middle of a word.
display_position= 0
//This counter tells us when it's time to make a line break.
width_counter = 0
//This finds the last space.
last_space = 0
//The array index of the message that is currently being displayed.
message_display = 0
//This is used to count the number of phrases that will be highlighted.
highlight_number = 0
//This stores the starting position of the highlighted text.
highlight_position[0] = 0
//This stores the length of the highlighted text.
highlight_length[0] = 0
//This is used to count the number of manual pauses that are in the message.
pause_number = 0
//This stores the position of the manual pause.
pause_position[0] = 0
//This stores the number of steps the manual pause lasts.
pause_length[0] = 0
//This variable stores the edited message.
current_string = ""


//Gives the user a second to realize the window has opened before the text
//starts typing out.
alarm[0] = 10
</argument>
      </arguments>
    </action>
    <action id="611" library="1">
      <!--action name: Variable-->
      <kind>VARIABLE</kind>
      <allowRelative>true</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">nexted</argument>
        <argument kind="EXPRESSION">0</argument>
      </arguments>
    </action>
    <action id="201" library="1">
      <!--action name: Create_Object-->
      <kind>NORMAL</kind>
      <allowRelative>true</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>FUNCTION</actionType>
      <functionName>action_create_object</functionName>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="GMOBJECT">Uncontrollable</argument>
        <argument kind="EXPRESSION">0</argument>
        <argument kind="EXPRESSION">0</argument>
      </arguments>
    </action>
    <action id="201" library="1">
      <!--action name: Create_Object-->
      <kind>NORMAL</kind>
      <allowRelative>true</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>FUNCTION</actionType>
      <functionName>action_create_object</functionName>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="GMOBJECT">BossHealth</argument>
        <argument kind="EXPRESSION">0</argument>
        <argument kind="EXPRESSION">0</argument>
      </arguments>
    </action>
    <action id="202" library="1">
      <!--action name: Change_Object-->
      <kind>NORMAL</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>FUNCTION</actionType>
      <functionName>action_change_object</functionName>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>UnArenaWall</appliesTo>
      <arguments>
        <argument kind="GMOBJECT">ArenaWall</argument>
        <argument kind="MENU">1</argument>
      </arguments>
    </action>
  </actions>
</event>
