<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="CREATE" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">//Enclosing a part of a message in square brackets [] will cause the 
//enclosed string to be highlighted.

//Placing an asterisk * at the end of a message tells the code that
//the current message is the last message.

//Putting an exponent sign ^ at the end of a message followed by a number will cause the 
//next position to be at the number. If it is followed by a number, a comma, and then another number,
//then the code will open up a box for the player to choose which path to take.
//The first number is for the yes position, and the second is for the no position.

//If you surround a number by a less than sign &lt; and a greater then sign &gt;, the code will do a manual
//pause for the  specified number of steps.

//These are the actual messages.
str[0] = "[App?] Why are you sleeping? WAAAAAKKKEEEEE UUUUUUUUUUUPPPP!!!"
str[1] = "Wuh?"
str[2] = "Why were you sleeping in the middle of the road? That's the first time you've fallen asleep in the middle of an adventure."
str[3] = "I... oh my gosh."
str[4] = "What?"
str[5] = "I just remembered what happened. I defeated the [Caginator,] came out here, and saw some creepy red floating robot. It had two large claws and red glowing eyes."
str[6] = "Eh? What did it do to you?"
str[7] = "It scratched me really deep, and it hurt like heck. I fell unconscious and some guy named [Zanifer] told me to slay [the Beast] like it was something out of a fairy tale."
str[8] = "It doesn't look like anything scratched you. You have no scratch marks."
str[9] = "What? Whoa, you're right. I'm completely unscathed."
str[10] = "Perhaps you hallucinated the whole thing."
str[11] = "Hopefully I did."
str[12] = "Anyways, I came to tell you, good job defeating the [Caginator.] Now, we can proceed with our next plan."
str[13] = "What's that?"
str[14] = "The moment after the [Evil Toaster] stole the [Worminator, Tex] mentioned the [Bots.] Is that correct?"
str[15] = "Yes."
str[16] = "[ARS] seems to have some valuable information regarding the [Bots] which we can use to learn more about them. [Leaf] has done a bit of scouting and discovered the location of the blueprints of the [Bots.]"
str[17] = "Wow! The original blueprints used to build the [Bots?]"
str[18] = "Yep. The original blueprints themselves."
str[19] = "How on earth did [ARS] manage to get those blueprints?"
str[20] = "Rumor has it that there were several blueprints left lying against the East side of the [Great Stone Wall. Gertrude] found them, but to this day no one knows who left them there."
str[21] = "Hmm."
str[22] = "As of now, the blueprints are hidden inside of a circus tent owned by an apple who people call [Crazy Lu.]"
str[23] = "Inside of a circus tent? That doesn't sound very hard to reach at all."
str[24] = "Hey, this is a circus tent owned by [Crazy Lu. CRAAAAZZZYYYYYY LU!] You won't be able to move three feet into there without losing your sanity."
str[25] = "So what's the plan for stealing - I mean acquiring the blueprints?"
str[26] = "Don't worry about that. I've got a plan. In the meantime, you go free more apples. Good luck.*"
//These are the headshots that correspond to each message.
img[0] = MachFace
img[1] = AppFace
img[2] = MachFace
img[3] = AppFace
img[4] = MachFace
img[5] = AppFace
img[6] = MachFace
img[7] = AppFace
img[8] = MachFace
img[9] = AppFace
img[10] = MachFace
img[11] = AppFace
img[12] = MachFace
img[13] = AppFace
img[14] = MachFace
img[15] = AppFace
img[16] = MachFace
img[17] = AppFace
img[18] = MachFace
img[19] = AppFace
img[20] = MachFace
img[21] = AppFace
img[22] = MachFace
img[23] = AppFace
img[24] = MachFace
img[25] = AppFace
img[26] = MachFace
//These are the names of the person talking in each message.
name[0] = "Mach"
name[1] = "App"
name[2] = "Mach"
name[3] = "App"
name[4] = "Mach"
name[5] = "App"
name[6] = "Mach"
name[7] = "App"
name[8] = "Mach"
name[9] = "App"
name[10] = "Mach"
name[11] = "App"
name[12] = "Mach"
name[13] = "App"
name[14] = "Mach"
name[15] = "App"
name[16] = "Mach"
name[17] = "App"
name[18] = "Mach"
name[19] = "App"
name[20] = "Mach"
name[21] = "App"
name[22] = "Mach"
name[23] = "App"
name[24] = "Mach"
name[25] = "App"
name[26] = "Mach"
//As you can see, it is quite easy to add extra details for
//each message simply by adding an extra array. 
//It's that simple!

//This determines the number of pixels each line can be.
line_length = 420
//This controls the speed of the the text.
text_speed = 1
//This is the  x position in which the string starts at.
string_x = 16
//This is the y position in which the string starts at.
string_y = 48
//This determines the vertical spacing between lines.
//When set to zero, the spacing will only be the string's height.
vertical_spacing = 0
//This is the x position of the question box.
question_box_x = 32
//This is the y position of the question box.
question_box_y = 128
//This is the x position of the text drawn in relevance to question_box_x.
question_x = 18
//This is the y position of the text drawn in relevance to question_box_y.
question_y = 7
//This is the x position of the names.
name_x = 50
//This is the y position of the names.
name_y = 22
//This is the x position of the headshot.
headshot_x = 12
//This is the y position of the headshot.
headshot_y = 12
//This is the vertical spacing in between "Yes" and "No".
question_vert_spacing = 2
//This is the x postion in relevance to question_box_x.
highlight_x = 2
//If this charcter is detected, initiate a highlight.
highlight_open_character = "["
//This character determines the end of a highlight. Anything enclosed
//will be highlighted.
highlight_close_character = "]"
//If this charcter is detected, end messages.
end_character = "*"
//If this charcter is detected, ask question or jump to next position.
jump_character = "^"
//If this character is detected, initiate a manual pause.
pause_open_character = "&lt;"
//This character determines the number. The enclosed number
//is the length of the manual pause.
pause_close_character = "&gt;"


//The following variables do not need to be changed and are only used
//by the code.



//This determins if the messages end.
message_end = 0
//This determines when the typing is finished.
type_end = 0
//This determines if the meesage is a question message.
message_question = 0
//This is the target position if yes is selected.
yes_position = 0
//This is the target position if no is selected.
no_position = 0
//This is the option selected by the user.
question_selection = 1
//This detemins if the message is a jump message.
message_jump = 0
//This is the position of the next message.
jump_position = 0
//This is the string that is going to be displayed. It contains the
//modified version of the actual string.
display_string = ""
//This states the current position we are at in str[x] for adding
//characters into display_string.
position = 0
//This states the current position we are in display_string. This is
//used to prevent line breaks in the middle of a word.
display_position= 0
//This counter tells us when it's time to make a line break.
width_counter = 0
//This finds the last space.
last_space = 0
//The array index of the message that is currently being displayed.
message_display = 0
//This is used to count the number of phrases that will be highlighted.
highlight_number = 0
//This stores the starting position of the highlighted text.
highlight_position[0] = 0
//This stores the length of the highlighted text.
highlight_length[0] = 0
//This is used to count the number of manual pauses that are in the message.
pause_number = 0
//This stores the position of the manual pause.
pause_position[0] = 0
//This stores the number of steps the manual pause lasts.
pause_length[0] = 0
//This variable stores the edited message.
current_string = ""


//Gives the user a second to realize the window has opened before the text
//starts typing out.
alarm[0] = 10
</argument>
      </arguments>
    </action>
    <action id="611" library="1">
      <!--action name: Variable-->
      <kind>VARIABLE</kind>
      <allowRelative>true</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">nexted</argument>
        <argument kind="EXPRESSION">0</argument>
      </arguments>
    </action>
    <action id="201" library="1">
      <!--action name: Create_Object-->
      <kind>NORMAL</kind>
      <allowRelative>true</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>FUNCTION</actionType>
      <functionName>action_create_object</functionName>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="GMOBJECT">Uncontrollable</argument>
        <argument kind="EXPRESSION">0</argument>
        <argument kind="EXPRESSION">0</argument>
      </arguments>
    </action>
  </actions>
</event>
